# Docker Compose para laboratorio de penetración testing AISLADO
# Proyecto: apache-docker-project
# Archivo: lab-components/configs/docker-compose-isolated.yml
# 
# NOTA: Esta configuración NO tiene acceso a Internet
# Solo para pruebas en entorno completamente aislado

version: '3.8'

services:
  # Servidor Apache existente (PwotoSite.cl)
  apache-server:
    build: .
    container_name: apache-pwotosite-isolated
    networks:
      - dmz_isolated
    ports:
      - "80:80"
    volumes:
      - ./www:/var/www
      - ./config:/etc/apache2/sites-available
      - isolated-logs:/var/log/apache2
    environment:
      - ENVIRONMENT=isolated
      - INTERNET_ACCESS=false
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "environment=isolated-pentest"

  # DVWA sin acceso a Internet
  dvwa-isolated:
    image: vulnerables/web-dvwa
    container_name: dvwa-isolated
    networks:
      - dmz_isolated
    ports:
      - "8080:80"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=password
      - MYSQL_HOST=mysql-dvwa-isolated
      - INTERNET_ACCESS=false
    depends_on:
      - mysql-dvwa-isolated
    volumes:
      - dvwa-isolated-logs:/var/log/apache2
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "vulnerability.level=high"

  # MySQL para DVWA (aislado)
  mysql-dvwa-isolated:
    image: mysql:5.7
    container_name: mysql-dvwa-isolated
    networks:
      - lan_isolated
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=password
    volumes:
      - dvwa-db-isolated:/var/lib/mysql
      - mysql-dvwa-isolated-logs:/var/log/mysql
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "data.sensitivity=high"

  # Juice Shop (aislado)
  juice-shop-isolated:
    image: bkimminich/juice-shop
    container_name: juice-shop-isolated
    networks:
      - dmz_isolated
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=isolated
      - INTERNET_ACCESS=false
    volumes:
      - juice-shop-isolated-logs:/juice-shop/logs
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "vulnerability.level=medium"

  # WebGoat (aislado)
  webgoat-isolated:
    image: webgoat/goatandwolf
    container_name: webgoat-isolated
    networks:
      - dmz_isolated
    ports:
      - "8081:8080"
    environment:
      - WEBGOAT_HOST=0.0.0.0
      - WEBGOAT_PORT=8080
      - INTERNET_ACCESS=false
    volumes:
      - webgoat-isolated-logs:/home/webgoat/logs
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "vulnerability.level=high"

  # Mutillidae (aislado)
  mutillidae-isolated:
    image: citizenstig/nowasp
    container_name: mutillidae-isolated
    networks:
      - dmz_isolated
    ports:
      - "8082:80"
    environment:
      - MYSQL_HOST=mysql-mutillidae-isolated
      - MYSQL_DATABASE=nowasp
      - MYSQL_USER=nowasp
      - MYSQL_PASSWORD=nowasp
      - INTERNET_ACCESS=false
    depends_on:
      - mysql-mutillidae-isolated
    volumes:
      - mutillidae-isolated-logs:/var/log/apache2
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "vulnerability.level=high"

  # MySQL para Mutillidae (aislado)
  mysql-mutillidae-isolated:
    image: mysql:5.7
    container_name: mysql-mutillidae-isolated
    networks:
      - lan_isolated
    environment:
      - MYSQL_ROOT_PASSWORD=nowasp
      - MYSQL_DATABASE=nowasp
      - MYSQL_USER=nowasp
      - MYSQL_PASSWORD=nowasp
    volumes:
      - mutillidae-db-isolated:/var/lib/mysql
      - mysql-mutillidae-isolated-logs:/var/log/mysql
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "data.sensitivity=medium"

  # Contenedor atacante Kali Linux (aislado)
  kali-attacker-isolated:
    image: kalilinux/kali-rolling
    container_name: kali-attacker-isolated
    networks:
      - attacker_isolated
      - dmz_isolated  # Puede acceder a DMZ pero no a Internet
    tty: true
    stdin_open: true
    volumes:
      - ./lab-components/attack-tools:/tools
      - kali-home-isolated:/root
      - kali-isolated-logs:/var/log
    environment:
      - ENVIRONMENT=isolated
      - INTERNET_ACCESS=false
      - DISPLAY=:0
    command: /bin/bash
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "role=attacker"
      - "environment=isolated"

  # Base de datos vulnerable principal (aislada)
  mysql-vulnerable-isolated:
    image: mysql:5.7
    container_name: mysql-vulnerable-isolated
    networks:
      - lan_isolated
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=vulnerable_db
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=testpass
    ports:
      - "3306:3306"
    volumes:
      - mysql-vulnerable-isolated:/var/lib/mysql
      - mysql-vulnerable-isolated-logs:/var/log/mysql
      - ./lab-components/vulnerable-apps/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "data.sensitivity=critical"
      - "vulnerability.level=critical"

  # SSH Honeypot (aislado)
  ssh-honeypot-isolated:
    image: cowrie/cowrie
    container_name: ssh-honeypot-isolated
    networks:
      - dmz_isolated
    ports:
      - "2222:2222"
    volumes:
      - cowrie-logs-isolated:/cowrie/var/log/cowrie
      - cowrie-downloads-isolated:/cowrie/var/lib/cowrie/downloads
    environment:
      - COWRIE_HOSTNAME=server-01
      - COWRIE_LOG_LEVEL=INFO
      - INTERNET_ACCESS=false
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "role=honeypot"
      - "monitoring=enabled"

  # Servidor FTP vulnerable (aislado)
  ftp-vulnerable-isolated:
    image: stilliard/pure-ftpd
    container_name: ftp-vulnerable-isolated
    networks:
      - dmz_isolated
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    environment:
      - PUBLICHOST=192.168.90.10
      - FTP_USER_NAME=ftpuser
      - FTP_USER_PASS=ftppass
      - FTP_USER_HOME=/home/ftpuser
      - INTERNET_ACCESS=false
    volumes:
      - ftp-data-isolated:/home/ftpuser
      - ftp-logs-isolated:/var/log/pure-ftpd
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "vulnerability.level=high"
      - "service=ftp"

  # Servidor DNS interno (para resolución local)
  dns-server-isolated:
    image: andyshinn/dnsmasq
    container_name: dns-server-isolated
    networks:
      - management_isolated
    ports:
      - "53:53/udp"
    environment:
      - DNSMASQ_LISTEN_ADDRESS=0.0.0.0
    volumes:
      - ./lab-components/configs/dnsmasq.conf:/etc/dnsmasq.conf
    command: --no-daemon --log-queries --log-facility=-
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "role=infrastructure"
      - "service=dns"

  # Servidor web simple para documentación local
  docs-server-isolated:
    image: nginx:alpine
    container_name: docs-server-isolated
    networks:
      - management_isolated
    ports:
      - "8090:80"
    volumes:
      - ./docs:/usr/share/nginx/html:ro
      - ./lab-components/configs/nginx-docs.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_HOST=docs.local
      - NGINX_PORT=80
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "role=documentation"
      - "service=web"

  # Monitor de red interno
  network-monitor-isolated:
    image: nicolaka/netshoot
    container_name: network-monitor-isolated
    networks:
      - management_isolated
      - dmz_isolated
      - lan_isolated
      - attacker_isolated
    tty: true
    stdin_open: true
    volumes:
      - network-monitor-logs:/var/log
      - ./lab-components/scripts:/scripts:ro
    environment:
      - ROLE=network-monitor
      - ENVIRONMENT=isolated
    command: /bin/bash
    restart: unless-stopped
    labels:
      - "security.isolation=high"
      - "role=monitoring"
      - "access=multi-network"

# =================================================================
# CONFIGURACIÓN DE REDES AISLADAS
# =================================================================

networks:
  # Red DMZ aislada (sin acceso a Internet)
  dmz_isolated:
    driver: bridge
    internal: false  # Permite comunicación entre contenedores pero no a Internet
    driver_opts:
      com.docker.network.bridge.name: br-dmz-isolated
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "false"
    ipam:
      driver: default
      config:
        - subnet: 192.168.90.0/24
          gateway: 192.168.90.1
          ip_range: 192.168.90.100/28
    labels:
      - "security.isolation=high"
      - "environment=isolated"
      - "zone=dmz"
      - "internet.access=false"

  # Red LAN aislada (completamente interna)
  lan_isolated:
    driver: bridge
    internal: true  # Completamente aislada
    driver_opts:
      com.docker.network.bridge.name: br-lan-isolated
      com.docker.network.bridge.enable_icc: "true"
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1
          ip_range: 192.168.1.100/28
    labels:
      - "security.isolation=maximum"
      - "environment=isolated"
      - "zone=lan"
      - "internet.access=false"

  # Red de atacantes aislada
  attacker_isolated:
    driver: bridge
    internal: false  # Permite comunicación pero no a Internet
    driver_opts:
      com.docker.network.bridge.name: br-attack-isolated
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "false"
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1
          ip_range: 10.0.0.100/28
    labels:
      - "security.isolation=high"
      - "environment=isolated"
      - "zone=attacker"
      - "internet.access=false"

  # Red de gestión aislada
  management_isolated:
    driver: bridge
    internal: true  # Completamente aislada
    driver_opts:
      com.docker.network.bridge.name: br-mgmt-isolated
      com.docker.network.bridge.enable_icc: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
          ip_range: 172.20.0.100/28
    labels:
      - "security.isolation=maximum"
      - "environment=isolated"
      - "zone=management"
      - "internet.access=false"

# =================================================================
# CONFIGURACIÓN DE VOLÚMENES AISLADOS
# =================================================================

volumes:
  # Volúmenes de bases de datos
  dvwa-db-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=database"
      - "backup.required=true"

  mutillidae-db-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=database"
      - "backup.required=true"

  mysql-vulnerable-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=database"
      - "vulnerability.level=critical"
      - "backup.required=true"

  # Volúmenes de logs
  isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "retention.days=30"

  dvwa-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=dvwa"

  juice-shop-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=juice-shop"

  webgoat-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=webgoat"

  mutillidae-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=mutillidae"

  mysql-dvwa-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=mysql-dvwa"

  mysql-mutillidae-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=mysql-mutillidae"

  mysql-vulnerable-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=mysql-vulnerable"

  # Volúmenes de datos de aplicaciones
  kali-home-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=home"
      - "service=kali"

  kali-isolated-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=kali"

  cowrie-logs-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=ssh-honeypot"

  cowrie-downloads-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=downloads"
      - "service=ssh-honeypot"
      - "monitoring.required=true"

  ftp-data-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=ftp-data"
      - "service=ftp"

  ftp-logs-isolated:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=ftp"

  network-monitor-logs:
    driver: local
    labels:
      - "security.isolation=high"
      - "data.type=logs"
      - "service=network-monitor"

# =================================================================
# CONFIGURACIÓN DE SECRETS (para credenciales)
# =================================================================

secrets:
  mysql_root_password:
    external: false
    file: ./lab-components/secrets/mysql_root_password.txt
  
  dvwa_db_password:
    external: false
    file: ./lab-components/secrets/dvwa_db_password.txt
  
  ftp_credentials:
    external: false
    file: ./lab-components/secrets/ftp_credentials.txt

# =================================================================
# CONFIGURACIÓN DE HEALTHCHECKS
# =================================================================

# Nota: Los healthchecks están configurados en cada servicio para
# monitorear el estado de los contenedores en el entorno aislado

# =================================================================
# COMANDOS ÚTILES PARA GESTIÓN
# =================================================================

# Para iniciar el laboratorio aislado:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml up -d

# Para ver el estado:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml ps

# Para acceder al atacante:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml exec kali-attacker-isolated /bin/bash

# Para ver logs:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml logs [servicio]

# Para detener todo:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml down

# Para limpiar completamente:
# docker-compose -f lab-components/configs/docker-compose-isolated.yml down -v

# =================================================================
# NOTAS DE SEGURIDAD
# =================================================================

# IMPORTANTE: Este laboratorio está completamente aislado de Internet
# - Ningún contenedor puede acceder a Internet
# - Solo hay comunicación entre contenedores según las reglas de red
# - Todos los volúmenes están etiquetados para identificación
# - Los logs se almacenan localmente para análisis
# - Se incluye un servidor DNS local para resolución interna
# - Documentación disponible localmente en puerto 8090

# Matriz de comunicación en modo aislado:
# DMZ ←→ LAN: Solo MySQL (puerto 3306)
# Atacante ←→ DMZ: Acceso completo a servicios web
# Atacante ←X→ LAN: BLOQUEADO
# Gestión: Acceso de monitoreo a todas las redes
# Internet: ❌ COMPLETAMENTE BLOQUEADO para todos

# Este entorno es ideal para:
# - Pruebas de penetración offline
# - Desarrollo de exploits
# - Análisis de malware
# - Entrenamiento de seguridad
# - Investigación forense
# - Simulaciones de ataques
